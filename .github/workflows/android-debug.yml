name: Android Debug APK (fresh regen + NDK27)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "**/*.dart"
      - "pubspec.yaml"
      - ".github/workflows/android-debug.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK (cmdline-tools + sdkmanager)
        uses: android-actions/setup-android@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Detect Flutter app directory
        shell: bash
        run: |
          set -e
          APP_DIR="."
          for d in "." "shell_app" "app" "mobile" "client"; do
            if [ -f "$d/pubspec.yaml" ]; then APP_DIR="$d"; break; fi
          done
          echo "APP_DIR=$APP_DIR" >> "$GITHUB_ENV"
          echo "Detected APP_DIR=$APP_DIR"

      - name: Regenerate Android project (clean, embedding v2)
        shell: bash
        run: |
          set -e
          cd "$APP_DIR"
          rm -rf android
          flutter create --platforms=android .

      - name: Align NDK to 27 everywhere (gradle.properties, build.gradle(.kts), local.properties)
        shell: bash
        run: |
          set -e
          python3 - <<'PY'
          import io, os, re
          app_dir = os.environ.get('APP_DIR','.') or '.'

          # 1) Replace android.ndkVersion in android/gradle.properties
          gp = os.path.join(app_dir,'android','gradle.properties')
          os.makedirs(os.path.dirname(gp), exist_ok=True)
          text = ''
          if os.path.exists(gp):
            with io.open(gp,'r',encoding='utf-8') as f: text = f.read()
          # remove any existing android.ndkVersion lines
          text = re.sub(r'(?m)^\s*android\.ndkVersion\s*=.*\n', '', text)
          text = (text.rstrip() + '\nandroid.ndkVersion=27.0.12077973\n') if text.strip() else 'android.ndkVersion=27.0.12077973\n'
          with io.open(gp,'w',encoding='utf-8') as f: f.write(text)

          # 2) Ensure ndkVersion in app/build.gradle(.kts) is 27 (replace if exists, insert otherwise)
          for path in [os.path.join(app_dir,'android','app','build.gradle.kts'),
                       os.path.join(app_dir,'android','app','build.gradle')]:
              if not os.path.isfile(path): continue
              with io.open(path,'r',encoding='utf-8') as f: s = f.read()
              before = s

              if path.endswith('.kts'):
                  # replace existing
                  s = re.sub(r'ndkVersion\s*=\s*"[^"]+"', 'ndkVersion = "27.0.12077973"', s)
                  # insert if missing
                  if 'ndkVersion' not in s:
                      s = re.sub(r'(android\s*\{)', r'\1\n    ndkVersion = "27.0.12077973"', s, count=1)
              else:
                  # replace existing
                  s = re.sub(r'ndkVersion\s+["\'][^"\']+["\']', "ndkVersion '27.0.12077973'", s)
                  # insert if missing
                  if 'ndkVersion' not in s:
                      s = re.sub(r'(android\s*\{)', r"\1\n    ndkVersion '27.0.12077973'", s, count=1)

              if s != before:
                  with io.open(path,'w',encoding='utf-8') as f: f.write(s)

          # 3) local.properties ndk.dir -> NDK 27 path (will exist after installing)
          lp = os.path.join(app_dir,'android','local.properties')
          os.makedirs(os.path.dirname(lp), exist_ok=True)
          base = ''
          if os.path.exists(lp):
              with io.open(lp,'r',encoding='utf-8') as f: base = f.read()
          # remove existing ndk.dir lines
          base = re.sub(r'(?m)^\s*ndk\.dir\s*=.*\n', '', base)
          with io.open(lp,'w',encoding='utf-8') as f:
              f.write(base.rstrip() + '\nndk.dir=${ANDROID_SDK_ROOT}/ndk/27.0.12077973\n')
          PY

      - name: Install Android NDK 27
        shell: bash
        run: |
          set -e
          sdkmanager --install "ndk;27.0.12077973"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> "$GITHUB_ENV"
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> "$GITHUB_ENV"
          echo "ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> "$GITHUB_ENV"

      - name: Flutter pub get
        shell: bash
        run: |
          cd "$APP_DIR"
          flutter pub get

      - name: Build debug APK
        shell: bash
        run: |
          cd "$APP_DIR"
          flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.APP_DIR }}/build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error
