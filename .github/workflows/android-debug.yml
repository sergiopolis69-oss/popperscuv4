name: Android Debug APK (fresh regen + NDK27)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "**/*.dart"
      - "pubspec.yaml"
      - ".github/workflows/android-debug.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK (cmdline-tools + sdkmanager)
        uses: android-actions/setup-android@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Detect Flutter app directory
        shell: bash
        run: |
          set -e
          APP_DIR="."
          for d in "." "shell_app" "app" "mobile" "client"; do
            if [ -f "$d/pubspec.yaml" ]; then APP_DIR="$d"; break; fi
          done
          echo "APP_DIR=$APP_DIR" >> "$GITHUB_ENV"

      - name: Regenerate Android project (clean, embedding v2)
        shell: bash
        run: |
          set -e
          cd "$APP_DIR"
          rm -rf android
          flutter create --platforms=android .

      - name: Install NDK 27 and accept licenses
        shell: bash
        run: |
          set -e
          yes | sdkmanager --licenses || true
          sdkmanager --install "ndk;27.0.12077973"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> "$GITHUB_ENV"
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> "$GITHUB_ENV"
          echo "ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> "$GITHUB_ENV"

      - name: Force NDK 27 everywhere (properties + gradle)
        shell: bash
        run: |
          set -e
          APP_DIR="${APP_DIR:-.}"

          # local.properties with absolute paths
          mkdir -p "$APP_DIR/android"
          {
            echo "sdk.dir=$ANDROID_SDK_ROOT"
            echo "ndk.dir=$ANDROID_SDK_ROOT/ndk/27.0.12077973"
          } > "$APP_DIR/android/local.properties"

          # Ensure ALL gradle.properties use android.ndkVersion=27.0.12077973
          for GP in "gradle.properties" "$APP_DIR/gradle.properties" "$APP_DIR/android/gradle.properties"; do
            [ -f "$GP" ] || touch "$GP"
            sed -i -E '/^[[:space:]]*android\.ndkVersion[[:space:]]*=/d' "$GP"
            printf 'android.ndkVersion=27.0.12077973\n' >> "$GP"
          done

          # Replace any explicit 26.3.* defaults and set ndkVersion in all Gradle files
          find "$APP_DIR/android" -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -print0 | while IFS= read -r -d '' FILE; do
            # 1) Replace hardcoded 26.3.* with 27.0.12077973 (if template had a default)
            sed -i -E 's/26\.3\.[0-9]+/27.0.12077973/g' "$FILE"
            # 2) If ndkVersion is present, set it to 27.0.12077973 (Groovy and Kotlin DSL)
            sed -i -E 's/ndkVersion[[:space:]]*=[[:space:]]*"[^"]*"/ndkVersion = "27.0.12077973"/g' "$FILE"
            sed -i -E "s/ndkVersion[[:space:]]+['\"][^'\"]*['\"]/ndkVersion '27.0.12077973'/g" "$FILE"
            # 3) If ndkVersion missing, inject one inside the first android { } block
            if ! grep -q 'ndkVersion' "$FILE"; then
              awk '1; /android[[:space:]]*\{/ && !done {print "    ndkVersion = \"27.0.12077973\""; done=1}' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
            fi
          done

      - name: Flutter pub get
        shell: bash
        run: |
          cd "$APP_DIR"
          flutter pub get

      - name: Build debug APK (also override via Gradle param)
        shell: bash
        run: |
          cd "$APP_DIR"
          ./gradlew -p android -Pandroid.ndkVersion=27.0.12077973 --no-daemon --warning-mode all tasks >/dev/null 2>&1 || true
          flutter build apk --debug -Pandroid.ndkVersion=27.0.12077973

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.APP_DIR }}/build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error
