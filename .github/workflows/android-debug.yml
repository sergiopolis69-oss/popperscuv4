name: Android Debug APK (NDK27 hardened)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**/*.dart'
      - 'pubspec.yaml'
      - '.github/workflows/android-debug.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # SDK + NDK 27 (todo en UNA línea)
      - uses: android-actions/setup-android@v3
        with:
          packages: "platform-tools build-tools;34.0.0 platforms;android-34 ndk;27.0.12077973"

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Detect Flutter app directory
        shell: bash
        run: |
          set -e
          APP_DIR="."
          for d in "." "shell_app" "app" "mobile" "client"; do
            [ -f "$d/pubspec.yaml" ] && APP_DIR="$d" && break
          done
          echo "APP_DIR=$APP_DIR" >> $GITHUB_ENV
          echo "Detected APP_DIR=$APP_DIR"

      - name: Regenerate Android project (embedding v2)
        shell: bash
        run: |
          set -e
          cd "$APP_DIR"
          rm -rf android
          flutter create --platforms=android .

      - name: Write clean gradle.properties (no ndk.dir)
        shell: bash
        run: |
          set -e
          APP_DIR="${APP_DIR:-.}"
          mkdir -p "$APP_DIR/android"
          PROPS="$APP_DIR/android/gradle.properties"
          : > "$PROPS"
          echo "android.useAndroidX=true" >> "$PROPS"
          echo "android.enableJetifier=true" >> "$PROPS"
          echo "android.ndkVersion=27.0.12077973" >> "$PROPS"
          echo "org.gradle.jvmargs=-Xmx3g -Dfile.encoding=UTF-8" >> "$PROPS"
          # si existía, quita ndk.dir para que Gradle resuelva por versión
          sed -i.bak '/^ndk\.dir=/d' "$APP_DIR/android/local.properties" 2>/dev/null || true

      - name: Flutter pub get
        shell: bash
        env:
            JAVA_TOOL_OPTIONS: ""
            GRADLE_OPTS: ""
            _JAVA_OPTIONS: ""
        run: |
          cd "$APP_DIR"
          flutter pub get
          flutter doctor -v

      - name: Build debug APK
        shell: bash
        env:
            JAVA_TOOL_OPTIONS: ""
            GRADLE_OPTS: ""
            _JAVA_OPTIONS: ""
        run: |
          cd "$APP_DIR"
          flutter build apk --debug --verbose

      - uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.APP_DIR }}/build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error
