name: Android Debug APK (NDK27 hardened)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**/*.dart'
      - 'pubspec.yaml'
      - '.github/workflows/android-debug.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Detect Flutter app directory
        id: detect_dir
        shell: bash
        run: |
          set -e
          APP_DIR="."
          for d in "." "shell_app" "app" "mobile" "client"; do
            if [ -f "$d/pubspec.yaml" ]; then APP_DIR="$d"; break; fi
          done
          echo "APP_DIR=$APP_DIR" >> $GITHUB_ENV
          echo "Detected APP_DIR=$APP_DIR"

      - name: Regenerate Android project (embedding v2)
        shell: bash
        run: |
          set -e
          cd "$APP_DIR"
          rm -rf android
          flutter create --platforms=android .

      - name: Force NDK 27 (inject)
        shell: bash
        run: |
          set -e
          python3 - <<'PY'
          import io, os, re
          app_dir = os.environ.get('APP_DIR','.') or '.'
          for path in [os.path.join(app_dir,'android','app','build.gradle.kts'),
                       os.path.join(app_dir,'android','app','build.gradle')]:
              if os.path.isfile(path):
                  with io.open(path,'r',encoding='utf-8') as f:
                      s=f.read()
                  if 'ndkVersion' not in s:
                      if path.endswith('.kts'):
                          s=re.sub(r'(android\s*\{)', r'\1\n    ndkVersion = "27.0.12077973"', s, count=1)
                      else:
                          s=re.sub(r'(android\s*\{)', r"\1\n    ndkVersion '27.0.12077973'", s, count=1)
                      with io.open(path,'w',encoding='utf-8') as f:
                          f.write(s)
                      print(f'Injected ndkVersion into {path}')
                  else:
                      print(f'ndkVersion already present in {path}')
          props=os.path.join(app_dir,'android','gradle.properties')
          os.makedirs(os.path.dirname(props), exist_ok=True)
          lines=[]
          if os.path.exists(props):
              with io.open(props,'r',encoding='utf-8') as f:
                  lines=f.read().splitlines()
          if not any(line.startswith('android.ndkVersion=') for line in lines):
              lines.append('android.ndkVersion=27.0.12077973')
              with io.open(props,'w',encoding='utf-8') as f:
                  f.write('\n'.join(lines)+'\n')
              print('Added android.ndkVersion to gradle.properties')
          else:
              print('gradle.properties already has android.ndkVersion')
          PY

      - name: Install Android NDK 27
        shell: bash
        env:
          SDKMANAGER: ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin/sdkmanager
        run: |
          set -e
          echo "SDK root: $ANDROID_SDK_ROOT"
          if [ -x "$SDKMANAGER" ]; then
            yes | "$SDKMANAGER" --licenses >/dev/null
            yes | "$SDKMANAGER" --install "ndk;27.0.12077973"
          else:
            yes | sdkmanager --licenses >/dev/null
            yes | sdkmanager --install "ndk;27.0.12077973"
          fi
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> $GITHUB_ENV
          echo "ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> $GITHUB_ENV

      - name: Remove ndk.dir override (let Gradle pick by version)
        shell: bash
        run: |
          set -e
          APP_DIR="${APP_DIR:-.}"
          LP="$APP_DIR/android/local.properties"
          if [ -f "$LP" ]; then
            sed -i.bak '/^ndk\.dir=/d' "$LP"
          fi
        shell: bash
        env:
          SDKMANAGER: ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin/sdkmanager
        run: |
          set -e
          echo "SDK root: $ANDROID_SDK_ROOT"
          if [ -x "$SDKMANAGER" ]; then
            yes | "$SDKMANAGER" --licenses >/dev/null
            yes | "$SDKMANAGER" --install "ndk;27.0.12077973"
          else:
            yes | sdkmanager --licenses >/dev/null
            yes | sdkmanager --install "ndk;27.0.12077973"
          fi
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> $GITHUB_ENV
          echo "ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> $GITHUB_ENV

      - name: Flutter pub get
        shell: bash
        run: |
          cd "$APP_DIR"
          flutter pub get

      - name: Build debug APK
        shell: bash
        run: |
          cd "$APP_DIR"
          flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.APP_DIR }}/build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error
